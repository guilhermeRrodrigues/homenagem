#!/bin/bash

# Script para verificar se o servidor est√° pronto para acesso externo
# IP: 45.70.136.66

echo "üîç Verificando configura√ß√£o do servidor..."
echo "üìç IP: 45.70.136.66"
echo "üìç Porta: 8080"
echo "-" * 50

# Verificar se o Docker est√° rodando
if ! docker info > /dev/null 2>&1; then
    echo "‚ùå Docker n√£o est√° rodando"
    exit 1
fi

# Verificar se o container est√° rodando
if ! docker-compose ps | grep -q "omenagem-app.*Up"; then
    echo "‚ùå Container n√£o est√° rodando. Execute: ./start.sh"
    exit 1
fi

# Verificar se a porta 8080 est√° sendo usada pelo container
if ! docker-compose ps | grep -q "45.70.136.66:8080->3000/tcp"; then
    echo "‚ùå Porta 8080 n√£o est√° mapeada corretamente"
    exit 1
fi

# Verificar se a aplica√ß√£o responde localmente
echo "‚è≥ Testando aplica√ß√£o localmente..."
if curl -f http://45.70.136.66:8080/api/health > /dev/null 2>&1; then
    echo "‚úÖ Aplica√ß√£o respondendo localmente"
else
    echo "‚ùå Aplica√ß√£o n√£o responde localmente"
    exit 1
fi

# Verificar firewall
echo "‚è≥ Verificando firewall..."
if command -v ufw > /dev/null 2>&1; then
    if ufw status | grep -q "8080/tcp.*ALLOW"; then
        echo "‚úÖ Porta 8080 liberada no UFW"
    else
        echo "‚ö†Ô∏è  Porta 8080 pode n√£o estar liberada no UFW"
        echo "   Execute: sudo ufw allow 8080/tcp"
    fi
else
    echo "‚ö†Ô∏è  UFW n√£o encontrado, verifique iptables manualmente"
fi

# Verificar se o IP est√° configurado na interface de rede
echo "‚è≥ Verificando configura√ß√£o de rede..."
if ip addr show | grep -q "45.70.136.66"; then
    echo "‚úÖ IP 45.70.136.66 configurado na interface de rede"
else
    echo "‚ö†Ô∏è  IP 45.70.136.66 pode n√£o estar configurado na interface de rede"
    echo "   Verifique: ip addr show"
fi

echo ""
echo "üåê URLs de acesso:"
echo "   Aplica√ß√£o: http://45.70.136.66:8080"
echo "   Admin: http://45.70.136.66:8080/admin"
echo "   API Health: http://45.70.136.66:8080/api/health"
echo ""
echo "‚úÖ Servidor configurado para acesso externo!"
